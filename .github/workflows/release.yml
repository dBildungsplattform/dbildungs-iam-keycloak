name: Semantic Release

on:
  push:
    branches:
      - 'release'
    
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install dependencies
        run: >
          npm install -g
          semantic-release
          @semantic-release/commit-analyzer
          @semantic-release/release-notes-generator
          @semantic-release/git
          @semantic-release/github
      - name: Run Semantic-Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  get_tag:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - id: get_tag
        run: |
         tag=$(git describe --tags)
         echo "tag=$tag" >> $GITHUB_OUTPUT
  
  lower_generic_repo:
    name: lower repo name
    runs-on: ubuntu-latest
    outputs:
      image_repo: ${{ steps.lower-repo.outputs.repository }}
    permissions:
      contents: read
    steps:          
      - id: lower-repo
        name: Repository to lowercase
        run: |
          repo_var=${{ github.repository }}-generic
          echo "repository=${repo_var@L}" >> $GITHUB_OUTPUT

  build_and_upload_image:
    name: Publish image
    needs:
      - get_tag
    runs-on: ubuntu-latest
    permissions:
      packages: write
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        variant: ['generic', 'erwin', 'enrichment']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_tag.outputs.tag }}
          fetch-tags: true
      - name: Build image name and tags
        id: docker_meta_img
        uses: docker/metadata-action@v5.7.0
        with:
          context: git
          images: |
            name=ghcr.io/${{ github.repository }}-${{ matrix.variant }}
          labels: |
            org.opencontainers.image.version=${{ needs.get_tag.outputs.tag }}
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - id: lower-repo
        name: Repository to lowercase
        run: |
          repo_var=${{ github.repository }}-${{ matrix.variant }}
          echo "repository=${repo_var@L}" >> $GITHUB_OUTPUT
      
      - name: Build and push image to ghcr
        id: docker_build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          pull: true
          tags: ghcr.io/${{ steps.lower-repo.outputs.repository }}:${{ needs.get_tag.outputs.tag }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}
          build-args: |
            KEYCLOAK_VARIANT=${{ matrix.variant }}
      - name: run trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        with: 
          image-ref: ghcr.io/${{ steps.lower-repo.outputs.repository }}:${{ needs.get_tag.outputs.tag }}
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true
          scan-type: 'image'
        env:
          TRIVY_SKIP_DB_UPDATE: false
          TRIVY_SKIP_JAVA_DB_UPDATE: false
      - name: upload trivy results
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  # Helm Chart
  scan_helm:
    uses: dBildungsplattform/dbp-github-workflows/.github/workflows/check-helm-kics.yaml@5
    permissions:
      contents: read

  release_helm:
    concurrency:
      group: helm_release
      cancel-in-progress: false
    needs:
     - scan_helm
     - build_and_upload_image
     - get_tag
     - lower_generic_repo
    uses: dBildungsplattform/dbp-github-workflows/.github/workflows/chart-release.yaml@7
    secrets: inherit
    with:
      chart_name: "dbp-keycloak"
      chart_path: "./helm"
      helm_chart_version_generation: specified 
      image_tag_generation: specified 
      helm_chart_version: ${{ needs.get_tag.outputs.tag }}
      image_tag: ghcr.io/${{ needs.lower_generic_repo.outputs.image_repo }}:${{ needs.get_tag.outputs.tag }}
