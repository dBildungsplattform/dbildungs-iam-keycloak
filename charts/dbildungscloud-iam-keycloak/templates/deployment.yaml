apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.deployment" . }}
  labels:
    app.kubernetes.io/name: {{ template "common.names.releasename" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/layer: {{ template "common.names.releasename" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      app.kubernetes.io/name: {{ template "common.names.releasename" . }}
      labels:
        app.kubernetes.io/layer: {{ template "common.names.releasename" . }}
    spec:
      containers:
        - name: {{ template "common.names.releasename" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          securityContext:
            allowPrivilegeEscalation: {{ .Values.image.allowPrivilegeEscalation }}
          args:            
            - "--cache"
            - "local"
            - "--hostname"
            - "{{ .Values.ingress.hostname }}"
            - "--import-realm"
          imagePullPolicy:  {{ .Values.image.imagepullpolicy }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort:  {{ .Values.containerPorts.http }}
          startupProbe:
            httpGet:
              port: {{ .Values.service.name }}
              path: {{ .Values.startupProbe.httpRelativePath }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.name }}
              path:  {{ .Values.livenessProbe.path }}
          readinessProbe:
            httpGet:
              port: {{ .Values.service.name }}
              path: {{ .Values.readinessProbe.path }}
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key:  admin-user
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key:  keycloak-adminSecret
            - name: KC_PROXY
              value: "edge"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key: db-host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "common.names.configmap" . }}
                  key: db-name
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key: db-username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key: db-password
            - name: KC_DB_URL
              value: "jdbc:postgresql://$(DB_HOST)/$(DB_NAME)"
            - name: KC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key: keycloak-clientSecret
            - name: KC_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.keycloaksecretname }}
                  key: keycloak-adminSecret
            - name: KC_ROOT_URL
              value: "https://{{ .Values.ingress.hostname }}"
          volumeMounts:
          - mountPath: "/opt/keycloak/data/import"
            name: "realm-config"
            readOnly: true
      restartPolicy: {{ .Values.restartPolicy }}
      volumes:
        - name: realm-config
          secret:
            secretName: realm-config-secret