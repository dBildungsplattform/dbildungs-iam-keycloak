apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.name" . }}
  namespace: {{ template "common.names.name" . }}
  labels:
  {{- include "common.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "common.names.name" . }}
      app.kubernetes.io/component: keycloak
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ .Values.commonLabels.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }} 

          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}

          {{- if .command }}
          command:
            {{- toYaml .command | nindent 16 }}
          {{- end }}
          {{- with .args }}
          args:
            {{- toYaml . | nindent 16 }}
          {{- end }}

          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}

          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}

          ports:
            - name: {{ .Values.containerPorts.name }}
              containerPort: {{ .Values.containerPorts.http }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: {{ .Values.startupProbe.httpGet.path}}
              port: {{ .Values.startupProbe.httpGet.port}}
          {{- end }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
          env:
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.auth.existingSecret .Values.auth.name }}
                  key: admin-password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.auth.existingSecret .Values.auth.name }}
                  key: db-host
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.auth.existingSecret .Values.auth.name }}
                  key: db-password
            - name: KC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.auth.existingSecret .Values.auth.name }}
                  key: keycloak-clientSecret
            - name: KC_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.auth.existingSecret .Values.auth.name }}
                  key: keycloak-adminSecret
            {{- if .Values.extraEnvVars }}
            {{ toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "common.names.name" . }}
          volumeMounts:
            - mountPath: "/opt/keycloak/data/import"
              name: realm-config
              readOnly: true
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      volumes:
        - name: realm-config
          configMap:
            name: {{ .Values.realm.name }}
