apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.releasename" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.commonLabels.name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/layer: {{ .Values.selector.layer }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.commonLabels.name }}
        app.kubernetes.io/layer: {{ .Values.selector.layer }} 
    spec:
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }} 
      containers:
        - name: {{ .Values.commonLabels.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }} 

          {{- if .Values.enabledcontainerSecurityContext }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
          
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}

          args:            
            - "--cache"
            - "local"
            - "--hostname"
            - "{{ .Values.keycloakHostname }}" 
            - "--import-realm"
          ports:
            - name: {{ .Values.serviceName }} 
              containerPort:  {{ .Values.containerPorts.http }} 

          {{- if .Values.enabledStartupProbe }}
          startupProbe: {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.enabledlivenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.enabledreadinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key:  admin-user
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key:  admin-password
            - name: KC_PROXY
              value: {{ .Values.keycloak_proxy }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key: db-host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "common.names.releasename" . }}
                  key: db-name
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key: db-username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key: db-password
            - name: KC_DB_URL
              value: "jdbc:postgresql://$(DB_HOST)/$(DB_NAME)"
            - name: KC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key: keycloak-clientSecret
            - name: KC_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  {{- if .Values.auth.existingSecret }}
                  name: {{ .Values.auth.existingSecret }}
                  {{- end }}
                  {{- if not .Values.auth.existingSecret }}
                  name: {{ .Values.auth.name }}
                  {{- end }}
                  key: keycloak-adminSecret
            - name: KC_ROOT_URL
              value: "https://{{.Values.frontendHostname}}"
          volumeMounts:
           - mountPath: {{ .Values.volumeConfig.mountPath }}
             name: {{ .Values.volumeConfig.name }}
             readOnly: {{ .Values.volumeConfig.readOnly }}
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      volumes:
        - name: {{ .Values.volumeConfig.name }}
          secret:
            secretName:  {{ template "common.names.releasename" . }}-realm